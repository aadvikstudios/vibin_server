name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      # Step 3: Install dependencies and build the Go binary
      - name: Install dependencies and build
        run: |
          go mod tidy
          go build -o application main.go
          ls -la # Verify that the binary is created

      # Step 4: Prepare deployment package
      - name: Prepare deployment package
        run: |
          mkdir -p deployment
          mv application deployment/ || echo "Binary not found. Check build step."
          echo "web: ./application" > deployment/Procfile
          ls -la deployment # Verify the contents of the deployment folder
          zip -r application.zip deployment/

      # Step 5: Verify deployment package
      - name: Verify deployment package
        run: |
          echo "Contents of application.zip:"
          unzip -l application.zip

      # Step 6: Deploy to Elastic Beanstalk
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: vibin
          environment_name: vibin-env
          region: ap-south-1
          version_label: "build-${{ github.sha }}-${{ github.run_number }}"
          deployment_package: application.zip
          update_environment: true

      # Step 7: Confirm the new version is active
      - name: Confirm Deployment
        run: |
          echo "Deployment triggered for version: build-${{ github.sha }}-${{ github.run_number }}"
